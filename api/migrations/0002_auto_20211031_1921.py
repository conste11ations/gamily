# Generated by Django 3.2.8 on 2021-10-31 19:21

from django.db import migrations

def seed_data(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    Account = apps.get_model('api', 'Account')
    account_1 = Account(email='testuser1@test.com')
    account_1.save()
    account_2 = Account(email='testuser2@test.com')
    account_2.save()
    account_3 = Account(email='testuser3@test.com')
    account_3.save()

    Profile = apps.get_model('api', 'Profile')
    profile_1 = Profile(name='test user 1', age=18, education='None', stress_level=0, account_id=account_1, credit_score=600, net_worth=0, assets_mv=0, liabilities_mv=0, insurance=[], income=[], expenses=[])
    profile_1.save()
    profile_2 = Profile(name='test user 2', age=18, education='College', stress_level=0, account_id=account_1, credit_score=600, net_worth=0, assets_mv=0, liabilities_mv=0, insurance=[], income=[], expenses=[])
    profile_2.save()
    profile_3 = Profile(name='test user 3', age=18, education='University', stress_level=0, account_id=account_1, credit_score=600, net_worth=0, assets_mv=0, liabilities_mv=0, insurance=[], income=[], expenses=[])
    profile_3.save()    

    Question = apps.get_model('api', 'Question')
    question_1 = Question(question='what is question 1?', category='onboarding')
    question_1.save()
    question_2 = Question(question='what is question 2?', category='saving')
    question_2.save()

    Answer = apps.get_model('api', 'Answer')
    answer_1 = Answer(answer='q1 answer 1', question_id=question_1, impact={}, description='This is the correct answer')
    answer_1.save()
    answer_2 = Answer(answer='q1 answer 2', question_id=question_1, impact={}, description='This is the incorrect answer')
    answer_2.save()
    answer_3 = Answer(answer='q2 answer 1', question_id=question_2, impact={}, description='This is the correct answer')
    answer_3.save()
    answer_4 = Answer(answer='q2 answer 2', question_id=question_2, impact={}, description='This is the incorrect answer')
    answer_4.save()

    Scenario = apps.get_model('api', 'Scenario')
    scenario_1 = Scenario(question_id=question_1, response=answer_1, profile_id=profile_1)  
    scenario_1.save()

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(seed_data)
    ]
